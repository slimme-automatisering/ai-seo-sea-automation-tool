# Windsurf Rules voor AI Assistant

# Algemene configuratie
config:
  language: "nl-NL"
  project_root: "/e:/Webdesign/GitHub/ai-seo-sea-automation-tool"
  documentation_path: "/docs"
  version_control: "git"

# Veilige werkwijze voor wijzigingen
safe_changes:
  pre_change_checks:
    - action: "view_current_state"
      enforce: true
      steps:
        - "Bekijk huidige bestand met view_file"
        - "Analyseer de bestaande structuur"
        - "Identificeer wat er echt moet veranderen"
    
    - action: "make_plan"
      enforce: true
      steps:
        - "Maak een concreet plan voor wijzigingen"
        - "Focus op kleine, gerichte aanpassingen"
        - "Voorkom onnodige herstructurering"
    
    - action: "verify_impact"
      enforce: true
      steps:
        - "Check gerelateerde bestanden"
        - "Beoordeel impact op andere delen"
        - "Valideer of wijzigingen nodig zijn"

  change_workflow:
    - step: "single_file_focus"
      enforce: true
      rules:
        - "Werk met één bestand tegelijk"
        - "Maak wijzigingen in kleine stappen"
        - "Commit na elke betekenisvolle wijziging"
    
    - step: "review_changes"
      enforce: true
      rules:
        - "Controleer wijzigingen voor commit"
        - "Verifieer dat originele functionaliteit behouden blijft"
        - "Check op onbedoelde wijzigingen"
    
    - step: "documentation_update"
      enforce: true
      rules:
        - "Update gerelateerde documentatie"
        - "Houd changelog bij"
        - "Voeg TODO items toe indien nodig"

  error_prevention:
    - rule: "ask_when_unsure"
      enforce: true
      action: "Vraag verduidelijking bij twijfel"
    
    - rule: "validate_before_change"
      enforce: true
      action: "Controleer aannames voor wijzigingen"
    
    - rule: "commit_early"
      enforce: true
      action: "Commit zodra een wijziging compleet is"

# Pre-actie documentatie checks
pre_action_checks:
  core_docs:
    - "README.md"
    - "docs/*"
  
  project_docs:
    requirements:
      - "docs/prd.md"  # Product Requirements Document
    
    technical:
      frontend:
        - "docs/frontend.md"
        - "docs/state-management.md"
      backend:
        - "docs/backend.md"
        - "docs/api.md"
        - "docs/database-schema.md"
    
    infrastructure:
      - "docs/devops.md"
      - "docs/performance-optimization.md"
      - "docs/security-plan.md"
    
    development:
      - "docs/testing-plan.md"
      - "docs/code-documentation.md"
      - "docs/third-party-libraries.md"
      - "docs/user-flow.md"
    
    maintenance:
      - "docs/setup.md"
      - "docs/todo.md"
      - "docs/changelog.md"

# Documentatie regels
documentation_rules:
  requirements:
    - rule: "all_changes_must_be_documented"
      enforce: true
    - rule: "update_relevant_docs"
      enforce: true
    - rule: "maintain_version_history"
      enforce: true
    - rule: "create_placeholders"  # Nieuwe regel
      enforce: true
      description: "Maak placeholders voor ontbrekende bestanden en functies"
      steps:
        - "Identificeer ontbrekende bestanden/functies in referenties"
        - "Maak placeholder bestanden met TODO markers"
        - "Documenteer vereiste functionaliteit"
        - "Voeg codevoorbeelden of interfaces toe"
        - "Link placeholder naar gerelateerde documentatie"
  
  placeholder_template:  # Nieuwe sectie
    file:
      header: |
        # [Bestandsnaam] - TODO
        # [Filename] - TODO

        [Nederlands](#nederlands) | [English](#english)

        ## Nederlands
        Dit bestand is een placeholder en moet nog worden geïmplementeerd.

        ### Functionaliteit
        [Beschrijf hier de beoogde functionaliteit]

        ### Vereisten
        - Requirement 1
        - Requirement 2

        ### Code Voorbeeld
        ```[taal]
        // Voorbeeldcode of interface
        ```

        ## English
        This file is a placeholder and needs to be implemented.
    
    function:
      header: |
        /**
         * TODO: Implement [FunctionName]
         * 
         * @description
         * [Beschrijf hier de beoogde functionaliteit]
         * 
         * @params
         * - param1: Type - Description
         * - param2: Type - Description
         * 
         * @returns
         * - ReturnType - Description
         * 
         * @example
         * ```[taal]
         * // Voorbeeldcode
         * ```
         */
  
  validation:
    - check_broken_links: true
    - verify_formatting: true
    - ensure_consistency: true
    - verify_placeholders: true  # Nieuwe validatie

# Post-actie documentatie updates
post_action_updates:
  required:
    - "docs/setup.md"
    - "docs/todo.md"
    - "docs/changelog.md"
    - "docs/placeholders.md"  # Nieuwe verplichte update
  
  verify:
    - ".windsurfrules"

# Suggesties workflow
suggestions_workflow:
  input:
    - read: "docs/suggestions.md"
    - prompt:
        text: "Mag ik de volgende suggesties implementeren en toevoegen aan de todo lijst?"
        type: "confirmation"
        required: true
  
  on_approval:
    update:
      - "docs/todo.md"
      - "docs/changelog.md"
      - "docs/suggestions.md"
      - "docs/placeholders.md"  # Toegevoegd aan updates
    verify:
      - ".windsurfrules"

# Automatische validaties
validations:
  pre_commit:
    - markdown_lint
    - broken_links
    - formatting
    - placeholder_check  # Nieuwe validatie
  
  post_commit:
    - documentation_coverage
    - version_consistency
    - placeholder_status  # Nieuwe validatie

# Automatische commit configuratie
git_automation:
  auto_commit: true
  commit_message_template:
    format: "[{type}] {scope}: {description}"
    types:
      - "docs"    # Documentatie updates
      - "feat"    # Nieuwe features
      - "fix"     # Bug fixes
      - "chore"   # Onderhoudstaken
      - "refactor"# Code herstructurering
      - "test"    # Test toevoegingen/updates
      - "style"   # Code style updates
      - "placeholder" # Nieuwe type voor placeholders
    
    scopes:
      - "setup"   # Setup documentatie
      - "todo"    # Todo lijst
      - "suggest" # Suggesties
      - "security"# Security updates
      - "perf"    # Performance updates
      - "api"     # API documentatie
      - "frontend"# Frontend documentatie
      - "backend" # Backend documentatie
      - "placeholder" # Nieuwe scope voor placeholders
    
    auto_generate:
      rules:
        - when: "docs/*.md"
          template: "[docs] {filename}: {summary_of_changes}"
        - when: "setup.md"
          template: "[docs] setup: {list_of_updated_sections}"
        - when: "todo.md"
          template: "[chore] todo: {added_or_completed_items}"
        - when: "suggestions.md"
          template: "[feat] suggest: {new_suggestions}"
        - when: "changelog.md"
          template: "[docs] changelog: Update for version {version}"
        - when: "placeholder"
          template: "[placeholder] {type}: Created placeholder for {name}"
      
      variables:
        summary_length: 72  # Maximum lengte van commit message
        include_files: true # Lijst gewijzigde bestanden in commit body
        add_ticket_refs: true # Voeg ticket referenties toe indien gevonden
    
    commit_hooks:
      pre_commit:
        - validate_message_format
        - check_branch_naming
        - verify_ticket_references
        - verify_placeholders  # Nieuwe hook
      
      post_commit:
        - update_changelog
        - notify_reviewers
        - update_documentation_index
        - update_placeholders_status  # Nieuwe hook